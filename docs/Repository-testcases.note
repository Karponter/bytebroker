describe Repository:

  describe #constructor:

    ✔ it should correctly construct with no parameters @done (18-02-22 02:31)
    ✔ it should construct with in-memory caching @done (18-02-22 02:31)
    ✔ it should accept custom Datasource stack as provision @done (18-02-22 02:31)
    ✔ it should accept custom SyncStrategy as provision @done (18-02-22 02:31)
    ✔ it should accept custom EntityFactory as provision @done (18-02-22 02:32)
    ☐ it should accept custom ErrorProcessingStrategy as provision

  describe methods should be thenable:

    ✔ #method should return Promise @done (18-02-22 02:35)

  describe #get:

    ✔ it should delegate to Datasource::get() method @done (18-02-22 02:52)
    ✔ it should should delegate to datasorce with maximum readPriority property @done (18-02-22 02:59)
    ✔ it should try to read other datasources if requested one fails @done (18-02-22 03:04)
    ✔ it should resolve with Entity exemplar if EntityFactory was specified in constructot @done (18-02-22 03:09)

  describe #set:

    ✔ it should delegate to Datasource::set() method @done (18-02-22 22:23)
    ✔ it should delegate to WriteFirst datasource with maximum writePriority property @done (18-02-22 22:33)
    ✔ it shoul try to delegate to other datasource if requested one fails @done (18-02-22 23:18)
    ✔ it should delegate to every WriteAlways datasource @done (18-02-22 22:41)
    ✔ it should ignore writePriority property for WriteAlways datasource @done (18-02-22 22:44)
    ✔ it should not delegate to any of NoWrite datasource @done (18-02-22 22:51)

  describe #delete:

    ✔ it should delegate to Datasource::del() method @done (18-02-22 23:19)
    ✔ it should delegate to every datasource except NoWrite datasource @done (18-02-22 23:29)

  describe #getAll:

    ✔ it should delegate to Datasource::getAll() method @done (18-02-23 00:13)
    ✔ it should merge all data from datasources with respect to readPriority @done (18-02-23 00:35)

  describe #find:

    ✔ it should delegate to Datasource::find() method @done (18-02-23 00:37)
    ✔ it should delegate to Datasource::getall() methid if Datasource::find() is not implemented @done (18-02-23 00:39)
    ✔ it should merge all data from datasources with respect to readPriority @done (18-02-23 00:40)

  describe #mset:

    ✔ it should delegate to Datasource::mset() method @done (18-02-23 00:54)
    ✔ it should delegate to multiple #set() methods if #mset is not implemented @done (18-02-23 00:54)

  describe #mget:

    ✔ it should delegate to Datasource::mget() method if it is implemented @done (18-02-23 01:03)
    ✔ it should delegate to multiple #get() methods if #mget is not implemented @done (18-02-23 01:03)

  describe #mdelete:

    ✔ it should delegate to Datasource::mdelete() method if it is implemented @done (18-02-23 01:05)
    ✔ it should delegate to multiple #delete() methods if #mdelete is not implemented @done (18-02-23 01:05)

  describe #sync:
  
    ✔ it should resolve when sync is finished @done (18-02-23 01:17)
  
  describe SyncStrategy:

    describe SYNC_ON_TIMEOUT:

      ☐ it should trigger datasource update with specified interval
      ☐ it #sync should trigger values update to datasource
      ☐ it #set should NOT trigger datasource update
      ☐ it #delete should NOT trigger datasource update
      ☐ it #mset should NOT trigger datasource update
      ☐ it #mdelete should NOT trigger datasource update

    describe SYNC_ON_REQUEST:

      ☐ it #sync should trigger values update to datasource
      ☐ it #set should NOT trigger datasource update
      ☐ it #delete should NOT trigger datasource update
      ☐ it #mset should NOT trigger datasource update
      ☐ it #mdelete should NOT trigger datasource update

    describe SYNC_ON_UPDATE:

      ☐ it #sync should NOT trigger values update to datasource
      ☐ it #set should trigger datasource update
      ☐ it #delete should trigger datasource update
      ☐ it #mset should trigger datasource update
      ☐ it #mdelete should trigger datasource update
